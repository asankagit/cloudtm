AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  awslambdanodeSample

  Sample SAM Template for awslambdanodeSample
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 10
Resources:
  CloudTagManagerApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors: "'*'"
      Auth:
        DefaultAuthorizer: MyLambdaTokenAuthorizer
        Authorizers: 
          MyLambdaTokenAuthorizer:
            FunctionArn: !GetAtt AuthValidateFunction.Arn

  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /clickstream
            Method: get
            RestApiId: !Ref CloudTagManagerApi
            Auth:
              Authorizer: NONE

  WriteClickStreamFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/clickStream
      Handler: app.clickStreamWriteHandler
      Runtime: nodejs12.x
      
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /clickstream
            Method: post
            RestApiId: !Ref CloudTagManagerApi
            Auth:
              Authorizer: NONE
  
  KinesisListenerFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/kinesis_controller
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /kinesis_listener
            Method: get
            RestApiId: !Ref CloudTagManagerApi
            Auth:
              Authorizer: NONE

  UserAddFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/authentication/
      Policies:
        - AmazonDynamoDBFullAccess # Give DynamoDB Full Access to your Lambda Function
      Handler: users.addUser
      Runtime: nodejs12.x
      Events:
        UserAdd:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /users
            Method: post
            RestApiId: !Ref CloudTagManagerApi

  UserSignInFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/authentication/
      Policies:
        - AmazonDynamoDBFullAccess # Give DynamoDB Full Access to your Lambda Function
      Handler: users.signIn
      Runtime: nodejs12.x
      Events:
        UserSignIn:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /users/signIn
            Method: post
            RestApiId: !Ref CloudTagManagerApi
            Auth:
              Authorizer: NONE

  SiteAddFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/sites/
      Policies:
        - AmazonDynamoDBFullAccess # Give DynamoDB Full Access to your Lambda Function
      Handler: usersites.addUserSite
      Runtime: nodejs12.x
      Events:
        SiteAdd:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /sites
            Method: post
            RestApiId: !Ref CloudTagManagerApi

  SiteListFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/sites/
      Policies:
        - AmazonDynamoDBFullAccess # Give DynamoDB Full Access to your Lambda Function
      Handler: usersites.listSites
      Runtime: nodejs12.x
      Events:
        SiteAdd:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /sites
            Method: get
            RestApiId: !Ref CloudTagManagerApi

  VisitorAddFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/visitorcount/
      Policies:
        - AmazonDynamoDBFullAccess # Give DynamoDB Full Access to your Lambda Function
      Handler: app.recordVisitorDetails
      Runtime: nodejs12.x
      Events:
        SiteAdd:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /visitors
            Method: post
            RestApiId: !Ref CloudTagManagerApi
            Auth:
              Authorizer: NONE

  VisitorListFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/visitorcount/
      Policies:
        - AmazonDynamoDBFullAccess # Give DynamoDB Full Access to your Lambda Function
      Handler: app.listVisitorDetails
      Runtime: nodejs12.x
      Events:
        SiteAdd:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /visitors
            Method: get
            RestApiId: !Ref CloudTagManagerApi

  AuthValidateFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: src/authentication/
      Handler: perm.authorizer
      Runtime: nodejs12.x



Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${CloudTagManagerApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/clickstream/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn

  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  KinsesisListenerApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${CloudTagManagerApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/kiness_listener/"
  KinsesisListenerFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  KinsesisListenerFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn


  WriteClickStreamApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${CloudTagManagerApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/kiness_listener/"
  WriteClickStreamFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  WriteClickStreamFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn

